package com.tcc.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.tcc.controller.conversor.MapConverter;
import com.tcc.entity.Produto;
import com.tcc.entity.DTO.ProdutoDto;
import com.tcc.service.ProdutoService;

@RestController
@RequestMapping("api/v1/produto")
public class ProdutoController {
    
    @Autowired
    private ProdutoService produtoService;
    
    @Autowired
    private MapConverter mapConverter;
    
    // Inserir uma lista de ItemPedidos
    @PostMapping("/inserir")
    public ResponseEntity<List<Produto>> inserirProdutos(@Valid @RequestBody List<ProdutoDto> produtosDto) {
        // Chama o serviço para inserir os produtos
        List<Produto> produtosInseridos = produtoService.inserir(produtosDto);

        // Retorna uma resposta com status 201 (CREATED)
        return new ResponseEntity<>(produtosInseridos, HttpStatus.CREATED);
    }
    
    // Buscar um Produto por código
    @GetMapping("/id/{id}")
    public ResponseEntity<?> buscarPor(@PathVariable(name = "id") Integer id){
        return ResponseEntity.ok(mapConverter.toJsonMap(produtoService.buscarPor(id)));
    }
    
    // Alterar um Produto
    @PutMapping
    public ResponseEntity<?> alterar(@RequestBody Produto produto){
        return ResponseEntity.ok(mapConverter.toJsonMap(produtoService.alterar(produto)));
    }
    
    // Remover uma lista de ItemPedidos pelo ID
    @DeleteMapping
    public ResponseEntity<?> removerPor(@RequestBody List<Integer> ids){
        this.produtoService.remover(ids);
        return ResponseEntity.ok().build();
    }
    
    // Listar todos os ItemPedidos
    @GetMapping
    public ResponseEntity<?> listarTodos(){
        return ResponseEntity.ok(mapConverter.toJsonList(produtoService.listarTodos()));
    }
    
    @PostMapping("/criteria")
    public ResponseEntity<List<Produto>> buscarComFiltros(@RequestBody Produto produtoFiltro) {
        List<Produto> produtos = produtoService.buscarComFiltros(produtoFiltro);
        return ResponseEntity.ok(produtos);
    }
}
